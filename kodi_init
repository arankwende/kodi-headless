#!/bin/bash

set -e
trap 'kill $(jobs -p) 2>/dev/null' EXIT

echo "======================================================="
if [ ! -e /config/userdata/advancedsettings.xml ]; then
  if [ ! -d /config/userdata ]; then
    mkdir /config/userdata
  fi
  cp /usr/local/share/kodi/advancedsettings.xml.default /config/userdata/advancedsettings.xml
  chown kodi. /config/userdata/advancedsettings.xml

  if [ ! -z $KODI_DBHOST ] && [ ! -z $KODI_DBUSER ] && [ ! -z $KODI_DBPASS ]; then
    echo "Shared MySQL database: YES"
    xmlstarlet ed -L -u "advancedsettings/videodatabase/type" -v "mysql" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/videodatabase/host" -v "$KODI_DBHOST" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/videodatabase/user" -v "$KODI_DBUSER" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/videodatabase/pass" -v "$KODI_DBPASS" /config/userdata/advancedsettings.xml
    if [ ! -z $KODI_DBPREFIX_VIDEOS ]; then
      xmlstarlet ed -L -u "advancedsettings/videodatabase/name" -v "$KODI_DBPREFIX_VIDEOS" /config/userdata/advancedsettings.xml
    fi
    xmlstarlet ed -L -u "advancedsettings/musicdatabase/type" -v "mysql" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/musicdatabase/host" -v "$KODI_DBHOST" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/musicdatabase/user" -v "$KODI_DBUSER" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/musicdatabase/pass" -v "$KODI_DBPASS" /config/userdata/advancedsettings.xml
    if [ ! -z $KODI_DBPREFIX_MUSIC ]; then
      xmlstarlet ed -L -u "advancedsettings/musicdatabase/name" -v "$KODI_DBPREFIX_MUSIC" /config/userdata/advancedsettings.xml
    fi
  else
    echo "Shared MySQL database: NO"
    xmlstarlet ed -L -u "advancedsettings/videodatabase/type" -v "sqlite3" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/videodatabase/host" -v "/config/userdata/Database" /config/userdata/advancedsettings.xml

    xmlstarlet ed -L -u "advancedsettings/musicdatabase/type" -v "sqlite3" /config/userdata/advancedsettings.xml
    xmlstarlet ed -L -u "advancedsettings/musicdatabase/host" -v "/config/userdata/Database" /config/userdata/advancedsettings.xml
  fi
else
  echo "Shared MySQL database: UNKNOWN (Using custom advancedsettings.xml)"
fi

if [ ! -e /config/.smb/user.conf ]; then
  if [ ! -d /config/.smb ]; then
    mkdir /config/.smb
  fi
  cp /usr/local/share/kodi/smb.conf /config/.smb/user.conf
fi

if [ -z $KODI_UPDATE_INTERVAL ]; then
  KODI_UPDATE_INTERVAL="300"
fi
if [ -z $KODI_CLEAN_INTERVAL ]; then
  KODI_CLEAN_INTERVAL="86400"
fi

function update_library_job {
  while true; do
    sleep $KODI_UPDATE_INTERVAL
    sleep $((RANDOM % 5))
    su kodi -c "kodi-send --action='UpdateLibrary(video)'" > /dev/null
    su kodi -c "kodi-send --action='UpdateLibrary(music)'" > /dev/null
  done
}

function clean_library_job {
  while true; do
    sleep $KODI_CLEAN_INTERVAL
    su kodi -c "kodi-send --action='CleanLibrary(video)'" > /dev/null
    su kodi -c "kodi-send --action='CleanLibrary(music)'" > /dev/null
  done
}

update_library_job &
echo "Automatic library update: YES (${KODI_UPDATE_INTERVAL}s)"

if [[ $KODI_CLEAN == "yes" ]] || [[ $KODI_CLEAN == "true" ]]; then
  if [ -e /config/userdata/sources.xml ] && [ -e /config/userdata/passwords.xml ]; then
    echo "Automatic library cleaning: YES (${KODI_CLEAN_INTERVAL}s)"
    clean_library_job &
  else
    echo "Automatic library cleaning: NO (sources.xml/passwords.xml not found)"
  fi
else
  echo "Automatic library cleaning: NO"
fi

echo "======================================================="

echo "Starting Kodi..."

# make sure the temp directory exists otherwise kodi will crash
if [ ! -d /config/temp ]; then
    mkdir /config/temp
fi
if [ -f /config/temp/kodi.log ]; then
  rm /config/temp/kodi.log
fi
# ensure kodi has full access rights to config
chown kodi. -R /config
tail -F -q /config/temp/kodi.log 2>/dev/null &
exec su kodi -c "kodi -p --standalone --headless"
